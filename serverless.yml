service: test-node-aws
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs16.x
  apiGateway:
    shouldStartNameWithService: true
    description: REST API ${self:service}

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource:
        - arn:aws:dynamodb:us-east-1:876614818336:table/TodoList

functions:
  todo:
    handler: src/handlers/handler.handler
    events:
      - httpApi:
          path: /todos
          method: post
          bodyType: "TodoItem"
          responses:
            201:
              description: 'successful API response'
              message: "Item was created sucessfully"
              bodyType: "TodoItem"
      - httpApi:
          path: /todos
          method: get
          responses:
            200:
              description: 'successful API response'
              message: "Item was obtained sucessfully"
              bodyType: "TodoItems"
      - httpApi:
          path: /todos/{id}
          method: get
          responses:
            200:
              description: 'successful API response'
              message: "Item was obtained sucessfully"
              bodyType: "TodoItem"
      - httpApi:
          path: /todos/{id}
          method: put
          responses:
            201:
              description: 'successful API response'
              message: "Item was updated sucessfully"
              bodyType: "TodoItem"
      - httpApi:
          path: /todos/{id}
          method: delete
          responses:
            200:
              description: 'successful API response'
              message: "Item was removed sucessfully"

resources:
  Resources:
    TodoList:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: TodoList
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S # -------- string
        KeySchema:
          - AttributeName: id
            KeyType: HASH # -------- defining PK

plugins:
  - serverless-auto-swagger
  - serverless-offline
  - serverless-plugin-typescript

custom:
  serverlessPluginTypescript:
    tsConfigFileLocation: './tsconfig.json'
  autoswagger:
    typeFiles: ['./src/types/api-types.d.ts']
