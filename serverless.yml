service: test-node-aws
frameworkVersion: '3'
# memorySize: 1500
# architecture: x86_64

provider:
  name: aws
  runtime: nodejs16.x
  iamRoleStatements:  # to proive access to write in the table
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource:
        - arn:aws:dynamodb:us-east-1:876614818336:table/TodoList
  httpApi:
    id: xxxx

functions:
  todo:
    handler: src/handlers/mainHandler.mainHandler
    events:
      - httpApi:
          path: /todos
          method: post
          # responses:
          #   201:
          #     message: "sucess"
      - httpApi:
          path: /todos
          method: get
      - httpApi:
          path: /todos/{id}
          method: get
      - httpApi:
          path: /todos/{id}
          method: update
      - httpApi:
          path: /todos/{id}
          method: delete
          # documentation:
          #   summary: "Create User"
          #   description: "Creates a user and then sends a generated password email"
          #   requestBody:
          #     description: "A user information object"
          #   requestModels:
          #     application/json: "PutDocumentRequest"
          #   pathParams:
          #     - name: "username"
          #       description: "The username for a user to create"
          #       schema:
          #         type: "string"
          #         pattern: "^[-a-z0-9_]+$"
          #   queryParams:
          #     - name: "membershipType"
          #       description: "The user's Membership Type"
          #       schema:
          #         type: "string"
          #         enum:
          #           - "premium"
          #           - "standard"
          #   cookieParams:
          #     - name: "SessionId"
          #       description: "A Session ID variable"
          #       schema:
          #         type: "string"
          #   methodResponses:
          #     - statusCode: 201
          #       responseBody:
          #         description: "A user object along with generated API Keys"
          #       responseModels:
          #         application/json: "PutDocumentResponse"
          #     - statusCode: 500
          #       responseBody:
          #         description: "An error message when creating a new user"
          #       responseModels:
          #         application/json: "ErrorResponse"


resources:
  Resources:
    TodoList: # -------- resource name
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: TodoList
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S # -------- string
        KeySchema:
          - AttributeName: id
            KeyType: HASH # -------- defining PK

plugins:
  - serverless-auto-swagger
  - serverless-offline
  - serverless-plugin-typescript


custom:
  serverlessPluginTypescript:
    tsConfigFileLocation: './tsconfig.json'

#   autoswagger:
#     title: 'string'
#     apiType: 'httpApi'
#     generateSwaggerOnDeploy: true
#     # typefiles: ['./src/types/typefile1.d.ts', './src/subfolder/helper.d.ts']
#     swaggerFiles: ['./lib/doc/createTodo.json']
#     swaggerPath: 'string'
#     # apiKeyHeaders: ['Authorization', 'anyOtherName']
#     useStage: true | false
#     basePath: '/string'
#     host: 'http://localhost:3005'
#     schemes: ['http', 'https', 'ws', 'wss']
#     excludeStages: ['production', 'anyOtherStage']
#     # lambdaAuthorizer: ${self:custom.myAuthorizer}
#     useRedirectUI: true | false

# https://www.npmjs.com/package/serverless-auto-swagger